name: Docker Build and Deploy
on:
    workflow_dispatch:
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Repository
                uses: actions/checkout@v4

            -   name: Setup Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: '18'
                    cache: 'npm'
            
            -   name: Install Dependencies
                run: npm install

            -   name: Build NestJS Application
                run: npm run build

            -   name: Deploy to Server
                uses: easingthemes/ssh-deploy@main
                env: # Or as an environment variable
                    DATABASE_URL: ${{ secrets.DATABASE_URL }}
                with:
                    SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
                    REMOTE_HOST: ec2-107-22-133-44.compute-1.amazonaws.com
                    REMOTE_USER: ec2-user
                    # REMOTE_HOST: ${{ secrets.HOST_DNS }}
                    # REMOTE_USER: ${{ secrets.USERNAME }}
        
                    SCRIPT_AFTER: |
                        rm .env && touch .env
                        echo "APP_PORT=3131" >> ".env"
                        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ".env"
                        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ".env"
                        echo "CLIENT_APP_URL=${{ secrets.CLIENT_CALLBACK_URL }}" >> ".env"
                        echo "GOOGLE_API_BASE_URL=${{ secrets.CLIENT_SECRET }}" >> ".env"
                        echo "GOOGLE_CLIENT_ID=${{ secrets.CLIENT_ID }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.NODE_ENV }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.FIREBASE_PRIVATE_KEY }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.FIREBASE_CLIENT_EMAIL }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.FIREBASE_PROJECT_ID }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.PUSHER_APP_ID }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.PUSHER_KEY }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.PUSHER_SECRET }}" >> ".env"
                        echo "GOOGLE_CLIENT_SECRET=${{ secrets.PUSHER_CLUSTER }}" >> ".env"

                        

                        # Stop and remove existing container
                        sudo docker ps -q --filter "name=lint_api" | grep -q . && sudo docker stop lint_api && sudo docker rm lint_api || true

                        # Remove old Docker image
                        sudo docker images -q lint_api:latest | grep -q . && sudo docker rmi lint_api:latest || true

                        # Build Docker image
                        sudo docker build --no-cache -t lint_api:latest .

                        # Run the newly built Docker image
                        sudo docker run -d --name lint_api -p 3131:3131 lint_api:latest
